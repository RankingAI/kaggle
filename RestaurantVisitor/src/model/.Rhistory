plot(x,y)
y <- c(0.31,0.48,0.56,0.65,0.75,0.76,0.76,0.77,0.79,0.79,0.8,0.8,0.8,0.8,0.8,0.78,0.77,0.77,0.75,0.76,0.73,0.74,0.74,0.74,0.74,0.74,0.74,0.74,0.73,0.73)
x <- (1:30)
plot(x,y)
y <- c(0.31,0.48,0.56,0.65,0.75,0.76,0.76,0.77,0.79,0.79,0.8,0.8,0.8,0.8,0.8,0.78,0.77,0.77,0.75,0.76,0.73,0.74,0.74,0.74,0.74,0.74,0.74,0.74,0.73,0.73)
x <- (1:30)
lines(x,y)
y <- c(0.31,0.48,0.56,0.65,0.75,0.76,0.76,0.77,0.79,0.79,0.8,0.8,0.8,0.8,0.8,0.78,0.77,0.77,0.75,0.76,0.73,0.74,0.74,0.74,0.74,0.74,0.74,0.74,0.73,0.73)
x <- (1:30)
lines(x,y)
y <- (0.25, 0.31, 0.46, 0.57, 0.65, 0.75, 0.77, 0.78, 0.84, 0.84, 0.85, 0.84, 0.84, 0.84, 0.82, 0.8, 0.8, 0.79, 0.78, 0.77, 0.77, 0.77, 0.75, 0.74, 0.73, 0.73, 0.73, 0.73, 0.73, 0.73)
lines(x,y)
y <- c(0.31,0.48,0.56,0.65,0.75,0.76,0.76,0.77,0.79,0.79,0.8,0.8,0.8,0.8,0.8,0.78,0.77,0.77,0.75,0.76,0.73,0.74,0.74,0.74,0.74,0.74,0.74,0.74,0.73,0.73)
x <- (1:30)
lines(x,y)
y <- c(0.25, 0.31, 0.46, 0.57, 0.65, 0.75, 0.77, 0.78, 0.84, 0.84, 0.85, 0.84, 0.84, 0.84, 0.82, 0.8, 0.8, 0.79, 0.78, 0.77, 0.77, 0.77, 0.75, 0.74, 0.73, 0.73, 0.73, 0.73, 0.73, 0.73)
lines(x,y)
x <- (1:30)
y <- c(0.25, 0.31, 0.46, 0.57, 0.65, 0.75, 0.77, 0.78, 0.84, 0.84, 0.85, 0.84, 0.84, 0.84, 0.82, 0.8, 0.8, 0.79, 0.78, 0.77, 0.77, 0.77, 0.75, 0.74, 0.73, 0.73, 0.73, 0.73, 0.73, 0.73)
lines(x,y)
clear()
x <- (1:30)
y <- c(0.25, 0.31, 0.46, 0.57, 0.65, 0.75, 0.77, 0.78, 0.84, 0.84, 0.85, 0.84, 0.84, 0.84, 0.82, 0.8, 0.8, 0.79, 0.78, 0.77, 0.77, 0.77, 0.75, 0.74, 0.73, 0.73, 0.73, 0.73, 0.73, 0.73)
lines(x,y)
x <- (1:30)
y <- c(0.25, 0.31, 0.46, 0.57, 0.65, 0.75, 0.77, 0.78, 0.84, 0.84, 0.85, 0.84, 0.84, 0.84, 0.82, 0.8, 0.8, 0.79, 0.78, 0.77, 0.77, 0.77, 0.75, 0.74, 0.73, 0.73, 0.73, 0.73, 0.73, 0.73)
lines(x,y)
x <- (1:30)
y <- c(0.25, 0.31, 0.46, 0.57, 0.65, 0.75, 0.77, 0.78, 0.84, 0.84, 0.85, 0.84, 0.84, 0.84, 0.82, 0.8, 0.8, 0.79, 0.78, 0.77, 0.77, 0.77, 0.75, 0.74, 0.73, 0.73, 0.73, 0.73, 0.73, 0.73)
plot(x,y)
lines(x,y)
iter <- (1:30)
accuracy <- c(0.25, 0.31, 0.46, 0.57, 0.65, 0.75, 0.77, 0.78, 0.84, 0.84, 0.85, 0.84, 0.84, 0.84, 0.82, 0.8, 0.8, 0.79, 0.78, 0.77, 0.77, 0.77, 0.75, 0.74, 0.73, 0.73, 0.73, 0.73, 0.73, 0.73)
plot(x,y)
lines(x,y)
iter <- (1:30)
accuracy <- c(0.25, 0.31, 0.46, 0.57, 0.65, 0.75, 0.77, 0.78, 0.84, 0.84, 0.85, 0.84, 0.84, 0.84, 0.82, 0.8, 0.8, 0.79, 0.78, 0.77, 0.77, 0.77, 0.75, 0.74, 0.73, 0.73, 0.73, 0.73, 0.73, 0.73)
plot(x,y)
lines(x,y)
iter <- (1:30)
accuracy <- c(0.25, 0.31, 0.46, 0.57, 0.65, 0.75, 0.77, 0.78, 0.84, 0.84, 0.85, 0.84, 0.84, 0.84, 0.82, 0.8, 0.8, 0.79, 0.78, 0.77, 0.77, 0.77, 0.75, 0.74, 0.73, 0.73, 0.73, 0.73, 0.73, 0.73)
plot(iter,accuracy)
lines(iter,accuracy)
iteration <- (1:30)
accuracy <- c(0.25, 0.31, 0.46, 0.57, 0.65, 0.75, 0.77, 0.78, 0.84, 0.84, 0.85, 0.84, 0.84, 0.84, 0.82, 0.8, 0.8, 0.79, 0.78, 0.77, 0.77, 0.77, 0.75, 0.74, 0.73, 0.73, 0.73, 0.73, 0.73, 0.73)
plot(iteration,accuracy)
lines(iteration,accuracy)
iteration <- (1:30)
accuracy <- c(0.25, 0.31, 0.46, 0.57, 0.65, 0.75, 0.77, 0.78, 0.84, 0.84, 0.85, 0.84, 0.84, 0.84, 0.82, 0.82, 0.83, 0.84, 0.83, 0.84, 0.84, 0.83, 0.83, 0.83, 0.83, 0.83, 0.83, 0.83, 0.83, 0.83)
plot(iteration,accuracy)
lines(iteration,accuracy)
x <- c(6/6,5/6,4/6,4/6,3/6,3/6,3/6,2/6,1/6,1/6,1/6,1/6,1/6,1/6,0/6,0/6,0/6,0/6,0/6,0/6,0/6,0)
y <- (14/14,14/14,14/14,13/14,13/14,12/14,11/14,11/14,11/14,10/14,9/14,8/14,7/14,6/14,6/14,5/14,4/14,3/14,2/14,1/14,0/14)
plot(x,y)
lines(x,y)
x <- c(6/6,5/6,4/6,4/6,3/6,3/6,3/6,2/6,1/6,1/6,1/6,1/6,1/6,1/6,0/6,0/6,0/6,0/6,0/6,0/6,0/6,0)
y <- (14/14,14/14,14/14,13/14,13/14,12/14,11/14,11/14,11/14,10/14,9/14,8/14,7/14,6/14,6/14,5/14,4/14,3/14,2/14,1/14,0/14,0)
plot(x,y)
lines(x,y)
x <- c(6/6,5/6,4/6,4/6,3/6,3/6,3/6,2/6,1/6,1/6,1/6,1/6,1/6,1/6,0/6,0/6,0/6,0/6,0/6,0/6,0/6,0)
y <- c(14/14,14/14,14/14,13/14,13/14,12/14,11/14,11/14,11/14,10/14,9/14,8/14,7/14,6/14,6/14,5/14,4/14,3/14,2/14,1/14,0/14,0)
plot(x,y)
lines(x,y)
tmp <- read.csv("~/data/datafountain/JData/repartitioned/Comment/tmp", header=FALSE)
View(tmp)
tmp("V2")
tmp
type tmp
type(tmp)
plot(tmp$V4)
count(tmp$V4)
d <- density(tmp$V4)
plot(d)
plot(d,xaxt = "n")
axis(1, at = seq(0,1, by = 0.01), las=2)
d <- density(tmp$V2)
plot(d)
install.packages('updateR')
require(devtools)
install_github('andreacirilloac/updateR')
install_github('andreacirilloac/updateR')
updateR(admin_password = "JoePayne*0273")
updateR::updateR(admin_password = "JoePayne*0273")
require(devtools)
updateR::updateR(admin_password = "JoePayne*0273")
require(dplyr)
library(dplyr)
updateR::updateR(admin_password = "JoePayne*0273")
updateR::updateR(admin_password = "JoePayne*0273")
## wd etc ----
require(data.table)
require(stringr)
require(lubridate)
require(zoo)
require(lightgbm)
install.packages(data.table)
install.packages("data.table")
install.packages("stringr")
install.packages("zoo")
install.packages("lubridate")
install_github("Microsoft/LightGBM", subdir = "R-package")
library(devtools)
install.packages("lightgbm")
install.packages("R6")
install.packages("jsonlite")
## wd etc ----
require(data.table)
require(stringr)
require(lubridate)
require(zoo)
require(lightgbm)
round(5,2)
round(5.8,2)
round(1.8,2)
round(0.8,2)
round(0.88834,2)
factor(c(10,20,30,20,50,10))
factor(c(10,20,30,20,50,10, NaN))
factor(c(10,20,NaN,20,50,10, NaN))
quit()
setwd("~/project/workspace/python/kaggle/RestaurantVisitor/src/eda")
fold0 = read.csv("../../data/l0/kfold/0/valid.csv", header = TRUE, sep = ",")
fold1 = read.csv("../../data/l0/kfold/1/valid.csv", header = TRUE, sep = ",")
fold2 = read.csv("../../data/l0/kfold/2/valid.csv", header = TRUE, sep = ",")
fold3 = read.csv("../../data/l0/kfold/3/valid.csv", header = TRUE, sep = ",")
fold4 = read.csv("../../data/l0/kfold/4/valid.csv", header = TRUE, sep = ",")
FoldData = do.call("rbind", list(fold0, fold1, fold2, fold3, fold4))
library(psych)
library(dplyr)
#cols =  c("dow", "air_genre_name", "hol_days","holiday_flg", "latitude_y", "longitude_y")
#SlicedData = FoldData[,cols]
#FoldData[, 'air_genre_name4']
pairs.panels(FoldData[, c('visitors', 'visitor_rolling_46_39')], hist.col = "white", ellipses = FALSE)
#tmp <- FoldData %>% group_by(visit_date) %>% summarise(total_visitors = sum(visitors), total_reserve_visitors = sum(air_reserved_visitors))
#with(dd, plot(saldt, salpr, xaxt="n"))
#plot(tmp$visit_date, tmp$total_reserve_visitors, type = "h")
#axis.Date(1, at=seq(min(tmp$visit_date), max(tmp$visit_date), by="2 mon"), format="%Y-%m")
pairs.panels(FoldData[, c('visitors', 'visitor_rolling_46_39_std')], hist.col = "white", ellipses = FALSE)
pairs.panels(FoldData[, c('visitors', 'visitor_rolling_53_46_std')], hist.col = "white", ellipses = FALSE)
pairs.panels(FoldData[, c('visitors', 'visitor_rolling_60_53_std')], hist.col = "white", ellipses = FALSE)
setwd("~/project/workspace/python/kaggle/RestaurantVisitor/src/eda")
fold0 = read.csv("../../data/l0/kfold/0/valid.csv", header = TRUE, sep = ",")
fold1 = read.csv("../../data/l0/kfold/1/valid.csv", header = TRUE, sep = ",")
fold2 = read.csv("../../data/l0/kfold/2/valid.csv", header = TRUE, sep = ",")
fold3 = read.csv("../../data/l0/kfold/3/valid.csv", header = TRUE, sep = ",")
fold4 = read.csv("../../data/l0/kfold/4/valid.csv", header = TRUE, sep = ",")
FoldData = do.call("rbind", list(fold0, fold1, fold2, fold3, fold4))
library(psych)
library(dplyr)
#cols =  c("dow", "air_genre_name", "hol_days","holiday_flg", "latitude_y", "longitude_y")
#SlicedData = FoldData[,cols]
#FoldData[, 'air_genre_name4']
pairs.panels(FoldData[, c('visitors', 'visitor_rolling_67_39_std')], hist.col = "white", ellipses = FALSE)
#tmp <- FoldData %>% group_by(visit_date) %>% summarise(total_visitors = sum(visitors), total_reserve_visitors = sum(air_reserved_visitors))
#with(dd, plot(saldt, salpr, xaxt="n"))
#plot(tmp$visit_date, tmp$total_reserve_visitors, type = "h")
#axis.Date(1, at=seq(min(tmp$visit_date), max(tmp$visit_date), by="2 mon"), format="%Y-%m")
pairs.panels(FoldData[, c('visitors', 'visitor_rolling_67_39_mean')], hist.col = "white", ellipses = FALSE)
setwd("~/project/workspace/python/kaggle/RestaurantVisitor/src/eda")
pairs.panels(FoldData[, c('visitors', 'visitor_rolling_95_67_mean')], hist.col = "white", ellipses = FALSE)
